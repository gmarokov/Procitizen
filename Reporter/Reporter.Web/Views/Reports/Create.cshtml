@using System.Web.Mvc.Html
@model Reporter.Web.ViewModels.Reports.CreateReportViewModel

@{
    ViewBag.Title = "Create Report";
}

<div class="ui container content">
    <h2>@ViewBag.Title</h2>
    
    <div class="ui secondary menu">
        <div class="extra content">
            <div class="ui animated button" tabindex="0">
                <div class="visible content">Back</div>
                <div class="hidden content">
                    <a href="@Url.Action("All", "Reports")"><i class="chevron left icon"></i></a>
                </div>
            </div>
        </div>
        <div class="right menu">
            <div class="ui ">
                <a class="ui red button  inverted" href="@Url.Action("terms-and-conditions", "home")"><i class="warning sign icon"></i> Terms and Conditions</a>
            </div>
        </div>
    </div>
    
    <div class="ui">
        <div class="ui attached message">
            <div class="header">
                <h3>Create report for suggestion or complain for your local administration.</h3>
                
            </div>
            <p>Read the terms and conditions or the about page for more info. Be careful, once created report will be send to institution and can not be edited.</p>
        </div>
        
        @using (Html.BeginForm("Create", "Reports", FormMethod.Post, new { @class = "ui attached large form segment", enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(false, "", new { @class = "ui message" })
            <div class="ui stacked ">
                <div class="field">
                    <div class="ui left labeled input">
                        <div class="ui label">
                            @Html.LabelFor(model => model.Title, "Title")
                        </div>
                        @Html.TextBoxFor(model => model.Title, new { placeholder = "Please enter short title.." })
                    </div>
                </div>

                <div class="fields">
                    <div class="eight wide required field">
                        <div class="ui action labeled input">
                            <div class="ui label">
                                @Html.LabelFor(model => model.Categories, "Category")
                            </div>
                            @Html.DropDownListFor(m => m.SelectedCategoryId, new SelectList(Model.Categories, "Value", "Text", 1), "Please select category", new { @class = "ui compact selection dropdown" })
                        </div>
                    </div>
                    <div class="eight wide field">
                        <div class="ui action labeled input">
                            <div class="ui label">
                                @Html.LabelFor(model => model.Institutions, "Institution")
                            </div>
                            @Html.DropDownListFor(m => m.SelectedInstitutionId, new SelectList(Model.Institutions, "Value", "Text", 1), "Please select institution", new { @class = "ui compact selection dropdown" })
                        </div>

                    </div>
                </div>
                <div class="fields">
                    <div class="eight wide field">
                        <div class="ui action labeled input">
                            <div class="ui label">
                                @Html.LabelFor(model => model.Type, "Type")
                            </div>
                            @Html.EnumDropDownListFor(model => model.Type, "Please select type", new { @class = "dropdown" })
                        </div>
                    </div>
                    <div class="eight wide field">
                        <div class="field segment">
                            <div class="ui action labeled input">
                                <div class="ui label">
                                    @Html.LabelFor(model => model.FilesForReport, "Files")
                                </div>
                                <input id="files" type="file" name="FilesForReport" multiple="multiple" class="inputFiles" data-multiple-caption="{count} files selected" />
                                <label for="files"><i class="upload icon"></i> <span>Choose images, videos or docs</span></label>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="field">
                    @Html.LabelFor(model => model.Description)
                    @Html.TextAreaFor(model => model.Description, new { @class = "", placeholder = "Describe your complain or suggestion in details here.." })
                </div>
                <button class="ui large submit teal button"><i class="file text outline icon"></i>Create report</button>
            </div>
        }
    </div>
</div>

@section scripts{

    <script>
        $('select.dropdown').dropdown();

        //$('.ui.form')
        //    .form({
        //        fields: {
        //            title: {
        //                identifier: 'Title',
        //                rules: [
        //                    {
        //                        type: 'empty',
        //                        prompt: 'Please enter a valid e-mail'
        //                    }
        //                ]
        //            },
        //            password: {
        //                identifier: 'Password',
        //                rules: [
        //                    {
        //                        type: 'empty',
        //                        prompt: 'Please enter a password'
        //                    },
        //                    {
        //                        type: 'minLength[6]',
        //                        prompt: 'Your password must be at least {ruleValue} characters'
        //                    }
        //                ]
        //            },
        //        },
        //        inline: true,
        //        on: 'blur'
        //    });

        (function ($, window, document, undefined) {
            $('.inputFiles').each(function () {
                var $input = $(this),
                    $label = $input.next('label'),
                    labelVal = $label.html();

                $input.on('change', function (e) {
                    var fileName = '';

                    if (this.files && this.files.length > 1)
                        fileName = (this.getAttribute('data-multiple-caption') || '').replace('{count}', this.files.length);
                    else if (e.target.value)
                        fileName = e.target.value.split('\\').pop();

                    if (fileName)
                        $label.find('span').html(fileName);
                    else
                        $label.html(labelVal);
                });

                // Firefox bug fix
                $input
                    .on('focus', function () { $input.addClass('has-focus'); })
                    .on('blur', function () { $input.removeClass('has-focus'); });
            });
        })(jQuery, window, document);
    </script>
}